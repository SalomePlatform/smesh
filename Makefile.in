#  Copyright (C) 2005  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
#  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#
# -* Makefile *- 
#
# Author : Patrick GOLDBRONN (CEA)
# Date : 28/06/2001
# $Header$
#

# source path
top_srcdir=@top_srcdir@
top_builddir=.
srcdir=@srcdir@
VPATH=.:@srcdir@:@top_srcdir@/bin:./bin/salome:./resources:@top_srcdir@/resources:./bin:@top_srcdir@/idl


@COMMENCE@

SUBDIRS = idl src doc adm_local

RESOURCES_FILES = \
delete.png  \
mesh_add_sub.png \
mesh_algo_hexa.png \
mesh_algo_mefisto.png \
mesh_algo_quad.png \
mesh_algo_regular.png \
mesh_algo_tetra.png \
mesh_angle.png \
mesh_area.png \
mesh_aspect.png \
mesh_aspect_3d.png \
mesh_build_compound.png\
mesh_compute.png \
mesh_connectivity.png \
mesh_diagonal.png \
mesh_edit.png \
mesh_hexa_n.png \
mesh_hexa.png \
mesh_hypo_area.png \
mesh_hypo_length.png \
mesh_hypo_segment.png \
mesh_hypo_volume.png \
mesh_hypo_edit.png \
mesh_info.png \
advanced_mesh_info.png \
standard_mesh_info.png \
mesh_whatis.png \
mesh_init.png \
mesh_length.png \
mesh_length_2d.png \
mesh_free_edges.png \
mesh_free_edges_2d.png \
mesh_multi_edges.png \
mesh_multi_edges_2d.png \
mesh_line_n.png \
mesh_line.png \
mesh_move_node.png \
mesh_orientation.png \
mesh.png \
mesh_polygon.png \
mesh_polyhedron.png \
mesh_pyramid_n.png \
mesh_pyramid.png \
mesh_quad_n.png \
mesh_quad.png \
mesh_rem_element.png \
mesh_rem_node.png \
mesh_set_algo.png \
mesh_set_hypo.png \
mesh_shading.png \
mesh_shrink.png \
mesh_skew.png \
mesh_taper.png \
mesh_tetra_n.png \
mesh_tetra.png \
mesh_tree_algo_hexa.png \
mesh_tree_algo_mefisto.png \
mesh_tree_algo.png \
mesh_tree_algo_quad.png \
mesh_tree_algo_regular.png \
mesh_tree_algo_tetra.png \
mesh_tree_algo_netgen_2d3d.png \
mesh_tree_algo_netgen_2d.png \
mesh_tree_hypo_area.png \
mesh_tree_hypo_length.png \
mesh_tree_hypo.png \
mesh_tree_hypo_segment.png \
mesh_tree_hypo_volume.png \
mesh_tree_hypo_netgen.png \
mesh_tree_hypo_netgen_2d.png \
mesh_tree_mesh.png \
mesh_tree_importedmesh.png \
mesh_tree_mesh_warn.png \
mesh_tree_mesh_partial.png \
mesh_triangle_n.png \
mesh_triangle.png \
mesh_update.png \
mesh_vertex_n.png \
mesh_vertex.png \
mesh_volume_3d.png \
mesh_wireframe.png \
mesh_points.png \
mesh_wrap.png \
mesh_tree_group.png \
mesh_edit_group.png \
mesh_make_group.png \
mesh_union2tri.png \
mesh_uniontri.png \
mesh_cutquad.png \
mesh_smoothing.png \
mesh_renumbering_nodes.png \
mesh_renumbering_elements.png \
mesh_extrusion.png \
mesh_extrusionpath.png \
mesh_revolution.png \
ModuleMesh.png \
mesh_unionGroups.png \
mesh_intersectGroups.png \
mesh_cutGroups.png \
mesh_deleteGroups.png \
mesh_translation_vector.png \
mesh_translation_points.png \
mesh_rotation.png \
mesh_symmetry_point.png \
mesh_symmetry_axis.png \
mesh_symmetry_plane.png \
mesh_sew_freeborders.png \
mesh_sew_conform_freeborders.png \
mesh_sew_bordertoside.png \
mesh_sew_sideelements.png \
mesh_merge_nodes.png \
mesh_merge_elements.png \
select1.png \
SMESH_en.xml \
SMESH.config \
StdMeshers.xml \
SMESHCatalog.xml \
SalomeApp.xml \
mesh_pattern.png \
pattern_sample_2d.png \
pattern_sample_3D.png \
mesh_add.png \
mesh_remove.png \
mesh_quad_edge.png \
mesh_quad_triangle.png \
mesh_quad_quadrangle.png \
mesh_quad_tetrahedron.png \
mesh_quad_pyramid.png \
mesh_quad_pentahedron.png \
mesh_quad_hexahedron.png \
mesh_conv_to_quad.png \
mesh_tree_hypo_layers_distribution.png \
mesh_tree_algo_radial_prism.png \
mesh_tree_algo_projection_3d.png \
mesh_tree_algo_projection_2d.png \
mesh_hypo_source_edge.png \
mesh_hypo_source_3d.png \
mesh_hypo_layer_distribution.png \
mesh_hypo_source_face.png \
mesh_tree_hypo_source_face.png \
mesh_tree_hypo_source_edge.png \
mesh_tree_hypo_source_3d_shape.png \
mesh_tree_hypo_projection_3d.png \
mesh_tree_hypo_projection_2d.png \
mesh_node_to_point.png

BIN_SCRIPT= \
VERSION

# copy header files in common directory

include_list = include/salome/SALOMEconfig.h \
               include/salome/SMESH_version.h

ifneq ($(HAVE_SSTREAM),yes)
	include_list += include/salome/sstream
endif

inc: idl $(include_list)

bin: bin/salome/VERSION

bin/salome/VERSION : bin/VERSION
	-$(RM) $@
	$(LN_S) ../../$< $@

include/salome/SALOMEconfig.h: salome_adm/unix/SALOMEconfig.ref
	-$(RM) $@
	$(LN_S) ../../$< $@

# test if SALOMEconfig.h has changed (contents)
salome_adm/unix/SALOMEconfig.ref: salome_adm/unix/SALOMEconfig.h
	@if ! [ -a $@ ]; then \
	  cp -p -f $< $@;        \
	fi;		      \
	if ! cmp $< $@; then  \
	  cp -p -f $< $@;        \
	fi;		      \

include/salome/sstream: salome_adm/unix/sstream
	-$(RM) $@
	$(LN_S) ../../$< $@

include/salome/SMESH_version.h: SMESH_version.h
	-$(RM) $@
	$(LN_S) ../../$< $@

depend: depend_idl

depend_idl:
	(cd idl ; $(MAKE) $@) || exit 1

# doc is already build : if you want to had documents, go manually to doc and run 'make doc'
#doc:
#	(cd doc && $(MAKE) $@) || exit 1

install-end:
# finish libtool install
#	@$(LT) --mode=finish $(libdir)

install-include: $(include_list)
	$(INSTALL) -d  $(includedir)
	@for f in X $(include_list); do				\
	   if test $$f != X; then				\
	     ($(INSTALL_DATA) -p $$f $(includedir)/. || exit 1);	\
	   fi;							\
	done

# install script in $(bindir) :
install-bin: $(BIN_SCRIPT)
	$(INSTALL) -d  $(bindir)
	if test $(BIN_SCRIPT)X != X; then 			\
		$(INSTALL_PROGRAM) $^ $(bindir);		\
	fi

uninstall: uninstall-idl

uninstall-idl:
	$(RM) $(idldir)/*.idl

distclean: distclean-other

distclean-other:
	-$(RM) salome_adm/unix/*~ salome_adm/unix/*% salome_adm/unix/*.bak salome_adm/unix/*.new salome_adm/unix/*.old
	-$(RM) salome_adm/unix/make_* 
	-$(RM) salome_adm/unix/depend salome_adm/unix/SALOMEconfig.h 
	-$(RM) config.cache config.log config.status 

@MODULE@

install: install-bin install-include install-end

