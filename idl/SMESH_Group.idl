//  Copyright (C) 2007-2008  CEA/DEN, EDF R&D, OPEN CASCADE
//
//  Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
//  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
//  See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//
//  File   : SMESH_Group.idl
//  Author : Sergey ANIKIN, OCC
//  $Header$
//
#ifndef _SMESH_GROUP_IDL_
#define _SMESH_GROUP_IDL_

#include "SALOME_Exception.idl"
#include "SALOME_GenericObj.idl"
#include "SALOMEDS_Attributes.idl"

#include "SMESH_Mesh.idl"

module SMESH
{
  interface Predicate;

  /*!
   * SMESH_Group: base interface of group object
   */
  interface SMESH_GroupBase : SALOME::GenericObj, SMESH_IDSource
  {
    /*!
     * Sets group name
     */
    void SetName( in string name );

    /*!
     * Returns group name
     */
    string GetName();

    /*!
     * Returns group type (type of elements in the group)
     */
    ElementType GetType();

    /*!
     * Returns the number of elements in the group
     */
    long Size();

    /*!
     * Returns true if the group does not contain any elements
     */
    boolean IsEmpty();

    /*!
     * returns true if the group contains an element with ID == <elem_id> 
     */
    boolean Contains( in long elem_id );

    /*!
     * Returns ID of an element at position <elem_index>
     */
    long GetID( in long elem_index );

    /*!
     * Returns a sequence of all element IDs in the group
     */
    long_array GetListOfID();

    /*!
     * Returns the mesh object this group belongs to
     */
    SMESH_Mesh GetMesh();

    /*!
     * Sets group color
     */
    void SetColor(in SALOMEDS::Color theColor);

    /*!
     * Returns group color
     */
    SALOMEDS::Color GetColor();

    /*!
     * Sets group color number
     * (corresponds to the "hue" parameter of the color - must be in range [0, 360])
     */
    void SetColorNumber( in long color );

    /*!
     * Returns group color number (obsolete - use GetColor instead)
     * (corresponds to the "hue" parameter of the color - must be in range [0, 360])
     */
    long GetColorNumber();
  }; 

  /*!
   * SMESH_Group: interface of group object
   */
  interface SMESH_Group : SMESH_GroupBase
  {
    /*!
     * Clears the group's contents
     */
    void Clear();

    /*!
     * Adds elements to the group
     */
    long Add( in long_array elem_ids );
    long AddByPredicate( in Predicate thePredicate );

    /*!
     * Removes elements from the group
     */
    long Remove( in long_array elem_ids );
    long RemoveByPredicate( in Predicate thePredicate );

  };
  /*!
   * SMESH_Group: interface of group object linked to geometry
   */
  interface SMESH_GroupOnGeom : SMESH_GroupBase
  {
    GEOM::GEOM_Object GetShape();
  };

};


#endif
