// Copyright (C) 2011-2020  CEA/DEN, EDF R&D
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//

// Remarques :
// L'ordre de description des fonctions est le meme dans tous les fichiers
// HOMARD_aaaa.idl, HOMARD_aaaa.hxx, HOMARD_aaaa.cxx, HOMARD_aaaa_i.hxx, HOMARD_aaaa_i.cxx :
// 1. Les generalites : Name, Delete, DumpPython, Dump, Restore
// 2. Les caracteristiques
// 3. Le lien avec les autres structures
//
// Quand les 2 fonctions Setxxx et Getxxx sont presentes, Setxxx est decrit en premier
//

#ifndef _HOMARD_HYPOTHESIS_IDL
#define _HOMARD_HYPOTHESIS_IDL

#include "SALOME_Component.idl"
#include "SALOME_Exception.idl"
#include "SALOMEDS.idl"

#include "HOMARD_Cas.idl"

module ADAPT
{
  typedef sequence<string> listeZonesHypo ;
  typedef sequence<string> listeIters ;
  typedef sequence<string> listeComposantsHypo ;
  typedef sequence<long>   listeTypes ;
  typedef sequence<string> listeFieldInterpsHypo ;

  struct InfosHypo
  {
      string FieldName;
      long UsCmpI;
      long UsField;
      long TypeThR;
      double ThreshR;
      long TypeThC;
      double ThreshC;
  };

  interface HOMARD_Hypothesis : Engines::EngineComponent
  {
// Generalites
    void     SetName(in string Name)                       raises (SALOME::SALOME_Exception);
    string   GetName()                                     raises (SALOME::SALOME_Exception);

    long     Delete()                                      raises (SALOME::SALOME_Exception);

    string   GetDumpPython()                               raises (SALOME::SALOME_Exception);

// Caracteristiques
    void     SetUnifRefinUnRef(in long RaffDera)           raises (SALOME::SALOME_Exception);
    listeTypes GetAdapRefinUnRef()                         raises (SALOME::SALOME_Exception);
    long     GetAdapType()                                 raises (SALOME::SALOME_Exception);
    long     GetRefinType()                                raises (SALOME::SALOME_Exception);
    long     GetUnRefType()                                raises (SALOME::SALOME_Exception);

    void     SetField(in string FieldName)                 raises (SALOME::SALOME_Exception);
    string   GetFieldName()                                raises (SALOME::SALOME_Exception);
    void     SetUseField(in long UsField)                  raises (SALOME::SALOME_Exception);
    InfosHypo GetField()                                   raises (SALOME::SALOME_Exception);

    void     SetUseComp(in long UsCmpI)                    raises (SALOME::SALOME_Exception);
    void     AddComp(in string NomComp)                    raises (SALOME::SALOME_Exception);
    void     SupprComp(in string NomComp)                  raises (SALOME::SALOME_Exception);
    void     SupprComps()                                  raises (SALOME::SALOME_Exception);
    listeComposantsHypo GetComps()                         raises (SALOME::SALOME_Exception);

    void     SetRefinThr(in long TypeThR, in double ThreshR)
                                                           raises (SALOME::SALOME_Exception);
    long     GetRefinThrType()                             raises (SALOME::SALOME_Exception);
    void     SetUnRefThr(in long TypeThC, in double ThreshC)
                                                           raises (SALOME::SALOME_Exception);
    long     GetUnRefThrType()                             raises (SALOME::SALOME_Exception);

    void     SetNivMax(in long NivMax)                     raises (SALOME::SALOME_Exception);
    long     GetNivMax()                                   raises (SALOME::SALOME_Exception);

    void     SetDiamMin(in double DiamMin)                 raises (SALOME::SALOME_Exception);
    double   GetDiamMin()                                  raises (SALOME::SALOME_Exception);

    void     SetAdapInit(in long AdapInit)                 raises (SALOME::SALOME_Exception);
    long     GetAdapInit()                                 raises (SALOME::SALOME_Exception);

    void     SetExtraOutput(in long ExtraOutput)           raises (SALOME::SALOME_Exception);
    long     GetExtraOutput()                              raises (SALOME::SALOME_Exception);

    void     AddGroup(in string LeGroupe)                  raises (SALOME::SALOME_Exception);
    void     SupprGroup(in string LeGroupe)                raises (SALOME::SALOME_Exception);
    void     SupprGroups()                                 raises (SALOME::SALOME_Exception);
    void     SetGroups(in ListGroupType ListGroup)         raises (SALOME::SALOME_Exception);
    ListGroupType GetGroups()                              raises (SALOME::SALOME_Exception);

    void     SetTypeFieldInterp(in long TypeFieldInterp)   raises (SALOME::SALOME_Exception);
    long     GetTypeFieldInterp()                          raises (SALOME::SALOME_Exception);
    void     AddFieldInterp(in string FieldInterp)         raises (SALOME::SALOME_Exception);
    void     AddFieldInterpType(in string FieldInterp, in long TypeInterp)
                                                           raises (SALOME::SALOME_Exception);
    void     SupprFieldInterp(in string FieldInterp)       raises (SALOME::SALOME_Exception);
    void     SupprFieldInterps()                           raises (SALOME::SALOME_Exception);
    listeFieldInterpsHypo GetFieldInterps()                raises (SALOME::SALOME_Exception);

// Liens avec les autres structures
    void     SetCaseCreation(in string NomCas)             raises (SALOME::SALOME_Exception);
    string   GetCaseCreation()                             raises (SALOME::SALOME_Exception);

    void     LinkIteration(in string NomIteration)         raises (SALOME::SALOME_Exception);
    void     UnLinkIteration(in string NomIteration)       raises (SALOME::SALOME_Exception);
    listeIters GetIterations()                             raises (SALOME::SALOME_Exception);

    void     AddZone(in string NomZone, in long TypeUse)   raises (SALOME::SALOME_Exception);
    void     AddZone0(in string NomZone, in long TypeUse)  raises (SALOME::SALOME_Exception);
    void     SupprZone(in string NomZone)                  raises (SALOME::SALOME_Exception);
    void     SupprZones()                                  raises (SALOME::SALOME_Exception);
    listeZonesHypo GetZones()                              raises (SALOME::SALOME_Exception);

  };
};
#endif
